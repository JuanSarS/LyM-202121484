// DO NOT EDIT THIS FILE! IT IS AUTOMATICALLY GENERATED FROM FILE "src/FA/QP2.gold"
package FA;
import FA.*;
import gold.*;
import gold.structures.*;
import gold.structures.automaton.*;
import gold.structures.bag.*;
import gold.structures.collection.*;
import gold.structures.deque.*;
import gold.structures.disjointset.*;
import gold.structures.graph.*;
import gold.structures.heap.*;
import gold.structures.list.*;
import gold.structures.map.*;
import gold.structures.multimap.*;
import gold.structures.point.*;
import gold.structures.queue.*;
import gold.structures.set.*;
import gold.structures.stack.*;
import gold.structures.tree.*;
import gold.structures.tree.binary.*;
import gold.structures.tree.nary.*;
import gold.structures.tuple.*;
import gold.structures.turingMachine.*;
import gold.swing.*;
import gold.swing.icon.*;
import gold.swing.icon.ajaxload.*;
import gold.swing.icon.famfamfam.*;
import gold.swing.icon.gold.*;
import gold.swing.icon.jlfgr.*;
import gold.swing.icon.wikimedia.*;
import gold.swing.icon.windows.*;
import gold.swing.look.*;
import gold.swing.util.*;
import gold.test.*;
import gold.test.automaton.*;
import gold.test.general.*;
import gold.test.graph.*;
import gold.util.*;
import gold.visualization.*;
import gold.visualization.automaton.*;
import gold.visualization.graph.*;
import gold.visualization.quadtree.*;
import gold.visualization.turingMachine.*;
import gold.visualization.util.*;
import java.lang.*;
import org.apfloat.*;
import static gold.util.GReflection.*;
@SuppressWarnings("all")
public final class QP2 {
  static {
    gold.swing.util.GUtilities.installGoldLookAndFeel();
  }
  public static Object A=null;
  public static void main(String[] args) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=8;
      A=$fix($opIntvlY('a','g'));
      $line=10;
      Object M=$fix(QP2.createFA());
      $line=11;
      QP2.testPerm($cast(gold.structures.automaton.IAutomaton.class,M));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,QP2.class,"main",$line);
    }
  }
  public static IAutomaton createFA() {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=16;
      Object estados=$fix(GCollections.asSet('S','T','X'));
      $line=17;
      Object Xs=$fix(A);
      $line=19;
      gold.structures.set.ISet $v1=$newSet();
      $v2:for (Object estado:GCollections.unmodifiableCollection(estados)) {
        for (Object letras1:GCollections.unmodifiableCollection($opPwsetY(Xs))) {
          for (Object letras2:GCollections.unmodifiableCollection($opPwsetY(Xs))) {
            $v1.add(GCollections.asList(estado,letras1,letras2));
          }
        }
      }
      Object Q=$fix($opUnionY($opUnionY($v1,GCollections.asSet(0)),GCollections.asSet(1)));
      $line=20;
      Object te=$fix(GCollections.asSet('a','b','c','d','e','f','g','$','='));
      $line=21;
      Object q_0=$fix(GCollections.asList('S',GCollections.emptySet(),GCollections.emptySet()));
      $line=22;
      gold.structures.set.ISet $v3=$newSet();
      $v4:for (Object letras1:GCollections.unmodifiableCollection($opPwsetY(Xs))) {
        for (Object letras2:GCollections.unmodifiableCollection($opPwsetY(Xs))) {
          $v3.add(GCollections.asList('X',letras1,letras2));
        }
      }
      Object F=$fix($v3);
      $line=24;
      Object M=$fix($invokeConstructor(GDeterministicAutomaton.class,new Object[]{Q,te,q_0,F,new GMethod(QP2.class,"delta")}));
      $line=25;
      $result=M;
      if (true) break $try;
      $line=26;
      $rethrow(new RuntimeException("The function \"createFA()\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,QP2.class,"createFA",$line);
    }
    return $cast(IAutomaton.class,$result);
  }
  public static Object delta(Object q, Object s) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=30;
      $result=0;
      if (true) break $try;
      $line=31;
      $rethrow(new RuntimeException("The function \"delta(q:Object,s:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,QP2.class,"delta",$line);
    }
    return $result;
  }
  public static Object delta(java.lang.Iterable $v5, Object s) {
    int $line=0;
    Object $result=null;
    $try:try {
      java.util.Iterator $v6=GCollections.unmodifiableCollection($v5).iterator();
      Object estado=$v6.next();
      Object letras1=$v6.next();
      Object letras2=$v6.next();
      $line=36;
      if ($opEqualY(estado,'S')) {
        $line=37;
        if ($opEqualY(s,'$')) {
          $line=37;
          $result=GCollections.asList('T',letras1,letras2);
          if (true) break $try;
        }
        else {
          $line=38;
          if ((!$opMembrY(s,letras1)&&!$opEqualY(s,'='))) {
            $line=38;
            $result=GCollections.asList(estado,$opUnionY(letras1,GCollections.asSet(s)),letras2);
            if (true) break $try;
          }
          else {
            $line=39;
            $result=0;
            if (true) break $try;
          }
        }
      }
      else {
        $line=41;
        if ($opEqualY(estado,'T')) {
          $line=42;
          if ($opEqualY(s,'=')) {
            $line=42;
            $result=GCollections.asList('X',letras1,letras2);
            if (true) break $try;
          }
          else {
            $line=43;
            if ((!$opMembrY(s,letras2)&&!$opEqualY(s,'$'))) {
              $line=43;
              $result=GCollections.asList(estado,letras1,$opUnionY(letras2,GCollections.asSet(s)));
              if (true) break $try;
            }
            else {
              $line=44;
              $result=0;
              if (true) break $try;
            }
          }
        }
        else {
          $line=46;
          if ($opEqualY(estado,'X')) {
            $line=47;
            if (((($opMembrY(s,letras1)&&!$opMembrY(s,letras2))&&!$opEqualY(s,'$'))&&!$opEqualY(s,'='))) {
              $line=47;
              $result=GCollections.asList('X',letras1,$opUnionY(letras2,GCollections.asSet(s)));
              if (true) break $try;
            }
            else {
              $line=48;
              $result=0;
              if (true) break $try;
            }
          }
        }
      }
      $line=51;
      $rethrow(new RuntimeException("The function \"delta(\u27E8estado,letras1,letras2\u27E9:java.lang.Iterable,s:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,QP2.class,"delta",$line);
    }
    return $result;
  }
  public static Object testPerm(IAutomaton C) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=54;
      java.util.Scanner sc=null;
      sc=$invokeConstructor(java.util.Scanner.class,new Object[]{$invokeField(System.class,"in",true,null)});
      $line=55;
      String string=null;
      string=$defaultValue(String.class);
      $line=58;
      System.out.println($message(new Object[]{"Testing"}));
      $line=60;
      while (true) {
        if (!($bool(true))) break;
        $line=61;
        System.out.println($message(new Object[]{"----------------------------"}));
        $line=62;
        System.out.println($message(new Object[]{"Enter a string:"}));
        $line=63;
        string=$cast(String.class,$fix(((java.util.Scanner)sc).nextLine()));
        $line=64;
        if ($opEqualY(string,"STOP")) {
          $line=64;
          break;
        }
        $line=65;
        Object result=$fix(((gold.structures.automaton.IAutomaton)C).acceptsString($cast(java.lang.String.class,string)));
        $line=66;
        System.out.println($message(new Object[]{$opAdditY("The string was ",(($bool(result))?("accepted"):("REJECTED")))}));
      }
      $line=68;
      System.out.println($message(new Object[]{"End test"}));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,QP2.class,"testPerm",$line);
    }
    return $result;
  }
}
